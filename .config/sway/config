# sway config file
#

#set $mod Mod1
set $mod Mod4
exec xrdb -merge ~/.Xresources
exec xrdb -merge ~/.Xresources-$(uname -n)
exec_always pkill mako && /usr/bin/mako --output eDP-1 --default-timeout 1400

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:xos4 Terminus 8

# Use Mouse+$mod to drag floating windows to their wanted position
#floating_modifier normal

# start a terminal
bindsym $mod+Return exec rofi-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

#set $run "/usr/bin/rofi -combi-modi drun,run -show combi -modi combi --term=$TERMINAL -font 'xos4 Terminus 10' -show-icons"
set $run j4-dmenu-desktop --no-generic --use-xdg-de --term=tilix --dmenu="dmenu -p '> ' -f -nf '#d7d7d5' -nb '#232729' -sb '#585858' -sf '#bcbcbc' -i -fn 'xos4 Terminus:size=10'"
bindsym $mod+grave exec $run
bindsym $mod+Tab exec $run

bindsym $mod+Shift+v exec clipmenu -i -fn Terminus:size=8
bindsym $mod+s exec gopass ls --flat | dmenu | xargs --no-run-if-empty gopass show -c
bindsym $mod+Shift+s exec gopass ls --flat | dmenu | xargs --no-run-if-empty gopass show | head -n 1 | xdotool type --clearmodifiers --file -

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+period move workspace to output right
bindsym $mod+Shift+apostrophe move workspace to output up
bindsym $mod+Shift+comma move workspace to output left
bindsym $mod+Shift+semicolon move workspace to output down

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+comma layout stacking
bindsym $mod+period layout tabbed
bindsym $mod+slash layout toggle split
#bindsym $mod+apostrophe layout auto_left
#bindsym $mod+semicolon layout auto next
# ANSI layout
bindsym $mod+backslash layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

set $w1    1:一
set $w2    2:二
set $w3    3:三
set $w4    4:四
set $w5    5:五
set $w6    6:六
set $w7    7:七
set $w8    8:八
set $w9    9:九
set $w10  10:十

# switch to workspace
bindsym $mod+1 workspace  $w1
bindsym $mod+2 workspace  $w2
bindsym $mod+3 workspace  $w3
bindsym $mod+4 workspace  $w4
bindsym $mod+5 workspace  $w5
bindsym $mod+6 workspace  $w6
bindsym $mod+7 workspace  $w7
bindsym $mod+8 workspace  $w8
bindsym $mod+9 workspace  $w9
bindsym $mod+0 workspace $w10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace  $w1
bindsym $mod+Shift+2 move container to workspace  $w2
bindsym $mod+Shift+3 move container to workspace  $w3
bindsym $mod+Shift+4 move container to workspace  $w4
bindsym $mod+Shift+5 move container to workspace  $w5
bindsym $mod+Shift+6 move container to workspace  $w6
bindsym $mod+Shift+7 move container to workspace  $w7
bindsym $mod+Shift+8 move container to workspace  $w8
bindsym $mod+Shift+9 move container to workspace  $w9
bindsym $mod+Shift+0 move container to workspace $w10

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the first scratchpad window
bindsym $mod+minus scratchpad show
# Show the pidgin scratchpad window, if any.
bindsym $mod+Shift+p [class="Pidgin" instance="Pidgin" title="Buddy List"] scratchpad show
#bindsym $mod+Shift+p [instance="Pidgin" title="Buddy List"] scratchpad show
bindsym $mod+p [class="Pidgin" instance="Pidgin" title="[^(Buddy List)]"] scratchpad show
#bindsym $mod+p [instance="Pidgin" title="[^(Buddy List)]"] scratchpad show
#bindsym $mod+o [class="Slack"] scratchpad show
#bindsym $mod+i [class="skypeforlinux"] scratchpad show

default_border none #pixel
#for_window [floating] default_border pixel

# cycle through border styles
bindsym $mod+b border toggle
# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
#bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym h resize shrink width 10px
        bindsym j resize grow height 10px
        bindsym k resize shrink height 10px
        bindsym l resize grow width 10px

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# move window (you can also use the mouse for that)
mode "move" {
        # These bindings trigger as soon as you enter the move mode
        bindsym h move left 10px
        bindsym j move down 10px
        bindsym k move up 10px
        bindsym l move right 10px

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+m mode "move"

# the volume keys need pulseaudio-ctl AUR package
bindsym XF86AudioMute exec /usr/bin/pulseaudio-ctl mute
bindsym XF86AudioRaiseVolume exec /usr/bin/pulseaudio-ctl up
bindsym XF86AudioLowerVolume exec /usr/bin/pulseaudio-ctl down

bindsym XF86AudioMicMute exec /usr/bin/pulseaudio-ctl mute-input

set $mpris_notify notify-send -i "$(mpris-ctl info %art_url)" "$(mpris-ctl info "%play_status")" \
    "$(mpris-ctl info "%artist_name: %track_name\nOn album '%album_name'")"
bindsym XF86AudioPlay exec mpris-ctl pp && sleep 1 && $mpris_notify
bindsym XF86AudioStop exec mpris-ctl stop && sleep 1 && $mpris_notify
bindsym XF86AudioNext exec mpris-ctl next && sleep 1 && $mpris_notify
bindsym XF86AudioPrev exec mpris-ctl prev && sleep 1 && $mpris_notify
bindsym $mod + XF86AudioPlay exec $mpris_notify

set $Light light
#set $Light pkexec brillo -equ 1500

bindsym XF86MonBrightnessUp --release exec $Light -A 5
bindsym XF86MonBrightnessDown --release exec $Light -U 5
#bindsym XF86Display exec "~/.local/bin/toggle-screens.sh"
#bindsym XF86Tools exec "~/.local/bin/toggle-screens.sh"

#debuglog on

set $Locker /usr/bin/swaylock --indicator-radius=80 -c 222222

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec mpris-ctl pause, exec $Locker, mode "default"
    bindsym e exec mpris-ctl stop, exec swaymsg exit, mode "default"
    bindsym s exec mpris-ctl pause, exec $Locker, exec systemctl suspend, mode "default"
    bindsym h exec mpris-ctl pause, $Locker, exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Print mode "$mode_system"
bindsym $mod+equal mode "$mode_system"

bindsym $mod+x [urgent=latest] focus

bindsym $mod+Shift+right workspace next_on_output
bindsym $mod+Shift+left workspace prev_on_output

#gaps inner 2

include "conf.d/$(uname -n).config"
include "conf.d/rules"

# Status bar uses custom script
set $bg  #323232
set $bgu #323232B0
set $btu #323232B0
set $fg  #ffffff
set $fgu #aaaaaa

#                       border  background  text    indicator   child
client.unfocused        $bg     $bgu        $fgu      $bgu        $bgu
client.focused_inactive $bgu    $bgu        $fgu      $bgu        $bgu
client.focused          $bgu    $bgu        $fg       $bgu        $bgu

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    #tray_output primary
    font pango:xos4 Terminus 8
    pango_markup disabled
    strip_workspace_numbers yes
    status_command i3status -c ~/.config/i3status/$(uname -n).config
    colors {
        statusline $fg
        background $bgu
        focused_background $bgu
        focused_workspace $bgu $btu $fg
        active_workspace $bgu $bgu $fg
        inactive_workspace $bgu $bgu $fgu
    }
}

